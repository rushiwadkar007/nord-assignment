Que 6) Correct Contract - 
// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

// 	import './interfaces/IToken.sol';
	import 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol';
	contract Token is ERC20 {

		address public owner;
		string public tokenName;
		string public tokenSymbol;
		uint256 public tokenDecimals;
		bool public initialized = false;
		
		constructor(string memory _name, string memory _symbol) ERC20(_name, _symbol){
		    tokenName = _name;
		    tokenSymbol = _symbol;
		    tokenDecimals = decimals();
		}
		
		function initialize(
		address _owner,
		string calldata _name,
		string calldata _symbol,
		uint8 _decimals
		) external {
			require(initialized == true);
			owner = _owner;
			tokenName = _name;
			tokenSymbol = _symbol;
			tokenDecimals = _decimals; 
			initialized = false;
		}
		
		function setOwner(address _owner) external {
			owner = _owner;
		}
		
		function mint(address recipient, uint amount) external {
			_mint(recipient, amount);
		}
		
		function burn(address recipient, uint amount) external {
			_burn(recipient, amount);
		}
	}